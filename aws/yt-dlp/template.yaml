Transform: AWS::Serverless-2016-10-31

Description: NextJS-13 YouTube-DLP

Parameters:
  ApiUrl:
    Type: String
    Default: http://placeholder.homelabwithkevin.com:8080
  PythonVersion:
    Type: String
    Default: python3.9
  LayerStackName:
    Type: String
    Default: python-lambda-layers

Outputs:
  ApiUrl:
    Value: !GetAtt ServerlessHttpApi.ApiEndpoint

Resources:
  Queue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 60

  Table:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: nextjs-13-yt-dlp-channels

  NextJSUser:
    Type: 'AWS::IAM::User'
    Properties: {}

  NextJSPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      Users:
        - !Ref NextJSUser
      PolicyName: nextjs13-dynamodb
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - 'dynamodb:GetItem'
              - 'dynamodb:DeleteItem'
              - 'dynamodb:PutItem'
              - 'dynamodb:Scan'
              - 'dynamodb:Query'
              - 'dynamodb:UpdateItem'
              - 'dynamodb:BatchWriteItem'
              - 'dynamodb:BatchGetItem'
              - 'dynamodb:DescribeTable'
              - 'dynamodb:ConditionCheckItem'
            Resource:
              - !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${Table}
              - !Sub arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${Table}/index/*

  ListChannels:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: !Ref PythonVersion
      CodeUri: list-channels
      MemorySize: 128
      Timeout: 60
      Environment:
        Variables:
          TableName: !Ref Table
          QueueUrl: !Ref Queue
      Events:
        EventBridge:
          Type: ScheduleV2
          Properties:
            ScheduleExpression: rate(1 hours)
            State: DISABLED
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table
        - SQSSendMessagePolicy:
            QueueName: !GetAtt Queue.QueueName

  ParseUrl:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: !Ref PythonVersion
      CodeUri: parse-url
      MemorySize: 256
      Timeout: 60
      Layers:
        - Fn::ImportValue:
            Fn::Sub: '${LayerStackName}-ytdlp'
      Environment:
        Variables:
          TableName: !Ref Table
          QueueUrl: !Ref Queue
      Events:
        HttpApi:
          Type: HttpApi
          Properties:
            Path: /
            Method: GET
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table
        - SQSSendMessagePolicy:
            QueueName: !GetAtt Queue.QueueName