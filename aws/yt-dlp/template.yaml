Transform: AWS::Serverless-2016-10-31

Description: NextJS-13 YouTube-DLP

Parameters:
  ApiUrl:
    Type: String
    Default: http://placeholder.homelabwithkevin.com:8080

Resources:
  Queue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 60

  Table:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: nextjs-13-yt-dlp-channels

  Lambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: python3.9
      CodeUri: python
      Timeout: 900
      Environment:
        Variables:
          TableName: !Ref Table
          QueueUrl: !Ref Queue
      Layers:
        - !Ref ytdlp
        - !Ref ffmpeg
      Events:
        PostAPI:
          Type: HttpApi
          Properties:
            Path: /
            Method: GET
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table
        - SQSSendMessagePolicy:
            QueueName: !GetAtt Queue.QueueName

  SQSParser:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: python3.9
      CodeUri: sqs-parser
      MemorySize: 512
      Timeout: 60
      Environment:
        Variables:
          TableName: !Ref Table
          QueueUrl: !Ref Queue
          ApiUrl: !Ref ApiUrl
      Layers:
        - !Ref ytdlp
        - !Ref requests
      Events:
        SQS:
          Type: SQS
          Properties:
             BatchSize: 1
             Queue: !GetAtt Queue.Arn
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table

  ListChannels:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: python3.9
      CodeUri: list-channels
      MemorySize: 128
      Timeout: 30
      Environment:
        Variables:
          TableName: !Ref Table
          QueueUrl: !Ref Queue
      Events:
        EventBridge:
          Type: ScheduleV2
          Properties:
            ScheduleExpression: rate(1 hours)
            State: ENABLED
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table
        - SQSSendMessagePolicy:
            QueueName: !GetAtt Queue.QueueName

  Downloader:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: python3.9
      CodeUri: downloader
      MemorySize: 256
      Timeout: 900
      Environment:
        Variables:
          TableName: !Ref Table
          QueueUrl: !Ref Queue
          ApiUrl: !Ref ApiUrl
      Layers:
        - !Ref requests
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table

  ytdlp:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: yt-dlp
      CompatibleRuntimes:
        - python3.9
      Description: YouTube-DLP (Python)
      LayerName: yt-dlp
    Metadata:
      BuildMethod: python3.9

  ffmpeg:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: ffmpeg
      CompatibleRuntimes:
        - python3.9
      Description: ffmpeg (python)
      LayerName: ffmpeg
    Metadata:
      BuildMethod: python3.9

  requests:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: requests
      CompatibleRuntimes:
        - python3.9
      Description: requests (python)
      LayerName: requests
    Metadata:
      BuildMethod: python3.9

  NextJSUser:
    Type: 'AWS::IAM::User'
    Properties: {}

  NextJSPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      Users:
        - !Ref NextJSUser
      PolicyName: nextjs13-dynamodb
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - 'dynamodb:GetItem'
              - 'dynamodb:DeleteItem'
              - 'dynamodb:PutItem'
              - 'dynamodb:Scan'
              - 'dynamodb:Query'
              - 'dynamodb:UpdateItem'
              - 'dynamodb:BatchWriteItem'
              - 'dynamodb:BatchGetItem'
              - 'dynamodb:DescribeTable'
              - 'dynamodb:ConditionCheckItem'
            Resource:
              - !Sub
                - arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}
                - tableName: !Ref Table
              - !Sub
                - arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableName}/index/*
